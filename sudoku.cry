module Sudoku where

/* 1,2, ..., 9(=0x1001) -> 4-bit*/
type SudokuNum = [4]

/* 3 x 3 square of 'Num' */
type SudokuGroup = [9]

/* 9 x 9 grid of 'SudokNum' */
type SudokuBoard = [9]SudokuGroup

// validCheck : SudokuGroup -> Bit
// validCheck group = [ contains x | x <- [1 .. 9] ] == ~zero
//   where contains x = [ x == y | y <- group ] != zero
