/*
 * Copyright (c) 2024 CSE.
 * Distributed under the terms of the BSD3 license (see LICENSE file)
 */

 module HIGHT where

//  encKeySchedule : [3][8] -> [3][8]
//  encKeySchedule [wk0, sk0, mk0] = [wk1, sk1, mk1]
//   where

delta_table : [128][8]
delta_table = [ 
    0x5a, 0x6d, 0x36, 0x1b, 0x0d, 0x06, 0x03, 0x41, // 0 ~ 7
    0x60, 0x30, 0x18, 0x4c, 0x66, 0x33, 0x59, 0x2c, // 8 ~ 15
    0x56, 0x2b, 0x15, 0x4a, 0x65, 0x72, 0x39, 0x1c, // 16 ~ 23 
    0x4e, 0x67, 0x73, 0x79, 0x3c, 0x5e, 0x6f, 0x37, // 24 ~ 31 
    0x5b, 0x2d, 0x16, 0x0b, 0x05, 0x42, 0x21, 0x50, // 32 ~ 39 
    0x28, 0x54, 0x2a, 0x55, 0x6a, 0x75, 0x7a, 0x7d, // 40 ~ 47 
    0x3e, 0x5f, 0x2f, 0x17, 0x4b, 0x25, 0x52, 0x29, // 48 ~ 55 
    0x14, 0x0a, 0x45, 0x62, 0x31, 0x58, 0x6c, 0x76, // 56 ~ 63 
    0x3b, 0x1d, 0x0e, 0x47, 0x63, 0x71, 0x78, 0x7c, // 64 ~ 71 
    0x7e, 0x7f, 0x3f, 0x1f, 0x0f, 0x07, 0x43, 0x61, // 72 ~ 79 
    0x70, 0x38, 0x5c, 0x6e, 0x77, 0x7b, 0x3d, 0x1e, // 80 ~ 87 
    0x4f, 0x27, 0x53, 0x69, 0x34, 0x1a, 0x4d, 0x26, // 88 ~ 95 
    0x13, 0x49, 0x24, 0x12, 0x09, 0x04, 0x02, 0x01, // 96 ~ 103 
    0x40, 0x20, 0x10, 0x08, 0x44, 0x22, 0x11, 0x48, // 104 ~ 111 
    0x64, 0x32, 0x19, 0x0c, 0x46, 0x23, 0x51, 0x68, // 112 ~ 119 
    0x74, 0x3a, 0x5d, 0x2e, 0x57, 0x6b, 0x35, 0x5a  // 120 ~ 127
 ]  // define the delta_table with appropriate values

// Define the encKeySchedule function
encKeySchedule : ([8][8], [128][8], [16][8]) -> ([8][8], [128][8])
encKeySchedule (enc_WK, enc_SK, MK) = (enc_WK', enc_SK')
  where
    // Generate whitening keys
    enc_WK' = [
      MK@12, MK@13, MK@14, MK@15,
      MK@0, MK@1, MK@2, MK@3
    ]

    // Generate subkeys
    enc_SK' = join [
      [MK @ ((j - i) % 8 + 0) + delta_table @ (16 * i + j + 0) | j <- [0..7]] #
      [MK @ ((j - i) % 8 + 8) + delta_table @ (16 * i + j + 8) | j <- [0..7]]
      | i <- [0..7]
    ]

// Example usage
example_MK : [16][8]
example_MK = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]

example_enc_WK : [8][8]
example_enc_WK = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

example_enc_SK : [128][8]
example_enc_SK = [0x00 | _ <- [0..127]]

(enc_WK', enc_SK') = encKeySchedule (example_enc_WK, example_enc_SK, example_MK)

// Property to check the lengths of enc_WK and enc_SK
property encKeySchedule_length = length wk' == 8 /\ length sk' == 128
  where
    (wk', sk') = encKeySchedule (example_enc_WK, example_enc_SK, example_MK)

// Property to check the correctness of whitening keys
property encKeySchedule_whitening_keys = wk' == [ example_MK@12, example_MK@13, example_MK@14, example_MK@15, example_MK@0, example_MK@1, example_MK@2, example_MK@3 ]
  where
    (wk', _) = encKeySchedule (example_enc_WK, example_enc_SK, example_MK)

// Property to check the specific subkey generation (example for the first subkey)
property encKeySchedule_first_subkey = sk'@0 == example_MK@0 + delta_table@0
  where
    (_, sk') = encKeySchedule (example_enc_WK, example_enc_SK, example_MK)